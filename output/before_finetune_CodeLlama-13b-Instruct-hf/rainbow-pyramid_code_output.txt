[INST] <<SYS>>

<</SYS>>

Write the pybullet simulation task class [rainbow-pyramid]. Provide answers in a python code block starting with ``` [/INST]  ```
import pybullet as p

class RainbowPyramidSimulationTask(p.SimulationTask):
    def __init__(self, pyramid_height, pyramid_width, pyramid_color, pyramid_position, pyramid_orientation):
        self.pyramid_height = pyramid_height
        self.pyramid_width = pyramid_width
        self.pyramid_color = pyramid_color
        self.pyramid_position = pyramid_position
        self.pyramid_orientation = pyramid_orientation

    def create_pyramid(self):
        pyramid_id = p.create_pyramid(self.pyramid_height, self.pyramid_width, self.pyramid_color, self.pyramid_position, self.pyramid_orientation)
        return pyramid_id

    def simulate(self, time_step):
        p.stepSimulation(time_step)

    def get_pyramid_position(self):
        return p.getBasePositionAndOrientation(self.pyramid_id)[0]

    def get_pyramid_orientation(self):
        return p.getBasePositionAndOrientation(self.pyramid_id)[1]

    def get_pyramid_velocity(self):
        return p.getBaseVelocity(self.pyramid_id)

    def get_pyramid_angular_velocity(self):
        return p.getBaseAngularVelocity(self.pyramid_id)

    def get_pyramid_force(self):
        return p.getBaseForce(self.pyramid_id)

    def get_pyramid_torque(self):
        return p.getBaseTorque(self.pyramid_id)

    def get_pyramid_mass(self):
        return p.getBaseMass(self.pyramid_id)

    def get_pyramid_inertia(self):
        return p.getBaseInertia(self.pyramid_id)

    def get_pyramid_friction(self):
        return p.getBaseFriction(self.pyramid_id)

    def get_pyramid_restitution(self):
        return p.getBaseRestitution(self.pyramid_id)

    def get_pyramid_rolling_friction(self):
        return p.getBaseRollingFriction(self.pyramid_id)

    def get_pyramid_spinning_friction(self):
        return p.getBaseSpinningFriction(self.pyramid_id)

    def get_pyramid_contact_points(self):
        return p.getBaseContactPoints(self.pyramid_id)

    def get_pyramid_contact_normal(self):
        return p.getBaseContactNormal(self.pyramid_id)

    def get_pyramid_contact_distance(self):
        return p.getBaseContactDistance(self.pyramid_id)

    def get_pyramid_contact_force(self):
        return p.getBaseContactForce(self.pyramid_id)

    def get_pyramid_contact_torque(self):
        return p.getBaseContactTorque(self.pyramid_id)

    def get_pyramid_contact_speed(self):
        return p.getBaseContactSpeed(self.pyramid_id)

    def get_pyramid_contact_normal_speed(self):
        return p.getBaseContactNormalSpeed(self.pyramid_id)

    def get_pyramid_contact_tangential_speed(self):
        return p.getBaseContactTangentialSpeed(self.pyramid_id)

    def get_pyramid_contact_spinning_speed(self):
        return p.getBaseContactSpinningSpeed(self.pyramid_id)

    def get_pyramid_contact_rolling_speed(self):
        return p.getBaseContactRollingSpeed(self.pyramid_id)

    def get_pyramid_contact_local_point(self):
        return p.getBaseContactLocalPoint(self.pyramid_id)

    def get_pyramid_contact_local_normal(self):
        return p.getBaseContactLocalNormal(self.pyramid_id)

    def get_pyramid_contact_local_tangential(self):
        return p.getBaseContactLocalTangential(self.pyramid_id)

    def get_pyramid_contact_local_