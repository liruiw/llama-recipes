[INST] <<SYS>>

<</SYS>>

Write the pybullet simulation task class [stack-cylinder-pyramid]. Provide answers in a python code block starting with ``` [/INST]  ```
import pybullet as p

class StackCylinderPyramidTask(p.Task):
    def __init__(self, cylinder_radius, cylinder_height, pyramid_base_length, pyramid_base_width, pyramid_height):
        self.cylinder_radius = cylinder_radius
        self.cylinder_height = cylinder_height
        self.pyramid_base_length = pyramid_base_length
        self.pyramid_base_width = pyramid_base_width
        self.pyramid_height = pyramid_height

    def create_cylinder(self):
        cylinder_id = p.create_cylinder(self.cylinder_radius, self.cylinder_height)
        return cylinder_id

    def create_pyramid(self):
        pyramid_id = p.create_pyramid(self.pyramid_base_length, self.pyramid_base_width, self.pyramid_height)
        return pyramid_id

    def stack_cylinder_on_pyramid(self, cylinder_id, pyramid_id):
        p.stack_object(cylinder_id, pyramid_id)

    def get_cylinder_position(self, cylinder_id):
        return p.get_object_position(cylinder_id)

    def get_pyramid_position(self, pyramid_id):
        return p.get_object_position(pyramid_id)

    def get_cylinder_orientation(self, cylinder_id):
        return p.get_object_orientation(cylinder_id)

    def get_pyramid_orientation(self, pyramid_id):
        return p.get_object_orientation(pyramid_id)

    def get_cylinder_velocity(self, cylinder_id):
        return p.get_object_velocity(cylinder_id)

    def get_pyramid_velocity(self, pyramid_id):
        return p.get_object_velocity(pyramid_id)

    def get_cylinder_angular_velocity(self, cylinder_id):
        return p.get_object_angular_velocity(cylinder_id)

    def get_pyramid_angular_velocity(self, pyramid_id):
        return p.get_object_angular_velocity(pyramid_id)

    def get_cylinder_angular_acceleration(self, cylinder_id):
        return p.get_object_angular_acceleration(cylinder_id)

    def get_pyramid_angular_acceleration(self, pyramid_id):
        return p.get_object_angular_acceleration(pyramid_id)

    def get_cylinder_linear_acceleration(self, cylinder_id):
        return p.get_object_linear_acceleration(cylinder_id)

    def get_pyramid_linear_acceleration(self, pyramid_id):
        return p.get_object_linear_acceleration(pyramid_id)

    def get_cylinder_force(self, cylinder_id):
        return p.get_object_force(cylinder_id)

    def get_pyramid_force(self, pyramid_id):
        return p.get_object_force(pyramid_id)

    def get_cylinder_torque(self, cylinder_id):
        return p.get_object_torque(cylinder_id)

    def get_pyramid_torque(self, pyramid_id):
        return p.get_object_torque(pyramid_id)

    def get_cylinder_mass(self, cylinder_id):
        return p.get_object_mass(cylinder_id)

    def get_pyramid_mass(self, pyramid_id):
        return p.get_object_mass(pyramid_id)

    def get_cylinder_inertia(self, cylinder_id):
        return p.get_object_inertia(cylinder_id)

    def get_pyramid_inertia(self, pyramid_id):
        return p.get_object_inertia(pyramid_id)

    def get_cylinder_friction(self, cylinder_id):
        return p.get_object_friction(cylinder_id)

    def get_