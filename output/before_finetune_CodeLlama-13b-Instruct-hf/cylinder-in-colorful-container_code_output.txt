[INST] <<SYS>>

<</SYS>>

Write the pybullet simulation task class [cylinder-in-colorful-container]. Provide answers in a python code block starting with ``` [/INST]  ```
import pybullet as p

class CylinderInColorfulContainer(p.Task):
    def __init__(self, cylinder_radius, cylinder_height, container_size, container_color):
        self.cylinder_radius = cylinder_radius
        self.cylinder_height = cylinder_height
        self.container_size = container_size
        self.container_color = container_color

    def reset(self):
        self.cylinder_id = p.loadURDF("cylinder.urdf", [0, 0, 0], useFixedBase=True)
        self.container_id = p.loadURDF("container.urdf", [0, 0, 0], useFixedBase=True)
        self.cylinder_position = [0, 0, 0]
        self.container_position = [0, 0, 0]

    def step(self):
        # Move the cylinder
        self.cylinder_position = [self.cylinder_position[0] + 0.1, self.cylinder_position[1] + 0.1, self.cylinder_position[2] + 0.1]
        p.resetBasePositionAndOrientation(self.cylinder_id, self.cylinder_position, [0, 0, 0, 1])

        # Move the container
        self.container_position = [self.container_position[0] + 0.1, self.container_position[1] + 0.1, self.container_position[2] + 0.1]
        p.resetBasePositionAndOrientation(self.container_id, self.container_position, [0, 0, 0, 1])

        # Check for collisions
        if p.getClosestPoints(self.cylinder_id, self.container_id, 0.1):
            print("Collision detected!")

        # Render the scene
        p.stepSimulation()

    def render(self):
        p.configureDebugVisualizer(p.COV_ENABLE_RENDERING, 1)
        p.configureDebugVisualizer(p.COV_ENABLE_GUI, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_TIMING, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_SEGMENTATION_MARK_PREVIEW, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_DEPTH_BUFFER_PREVIEW, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_SEGMENTATION, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_WIREFRAME, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_SHADOWS, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_MOTION_CAPTURE_RECORDING, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_KEYBOARD_SHORTCUTS, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_MOUSE_PICKING, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_VR_TELEPORTING, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_VR_LOOK_AROUND, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_VR_MOTION_CONTROLS, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_VR_BUTTONS, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_VR_ANALOG, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_VR_HAPTICS, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_VR_DEVICE_CONTROLS, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_VR_TRACKING, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_VR_MODEL_VISUALIZATION, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_VR_COLLISION_VISUALIZATION, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_VR_VISUALIZATION_MARKER_VISUALIZATION, 0)
        p.configureDebugVisualizer(p.COV_ENABLE_V